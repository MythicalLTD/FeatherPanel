name: CLI Release

on:
  push:
    tags:
      - "v*" # runs only when you tag a version like v1.0.0
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-and-release:
    name: Build & Release CLI
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "9.0.x"

      - name: Extract version from tag
        id: version
        run: |
          if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/v}
          else
            VERSION="1.0.0"
          fi
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          echo "Building version: ${VERSION}"

      - name: Build all architectures
        working-directory: cli
        run: make all VERSION=${{ steps.version.outputs.version }}

      - name: List built binaries
        working-directory: cli
        run: |
          echo "Built binaries:"
          find publish -type f -name "FeatherCli-*" -exec ls -lh {} \;

      - name: Create checksums
        working-directory: cli/publish
        run: |
          echo "Generating checksums..."
          for rid in linux-x64 linux-arm linux-arm64; do
            if [ -d "$rid" ]; then
              cd "$rid"
              for file in FeatherCli-*; do
                if [ -f "$file" ] && [[ "$file" != *.sha256 ]]; then
                  sha256sum "$file" > "$file.sha256"
                  echo "Created checksum for $file"
                fi
              done
              cd ..
            fi
          done
          # Create checksums for simplified names in release-assets
          cd ../release-assets
          for file in feathercli-*; do
            if [ -f "$file" ] && [[ "$file" != *.sha256 ]]; then
              sha256sum "$file" > "$file.sha256"
              echo "Created checksum for $file"
            fi
          done

      - name: Prepare release assets
        id: assets
        working-directory: cli/publish
        run: |
          mkdir -p ../release-assets
          echo "Copying and renaming binaries for user-friendly installation..."
          for rid in linux-x64 linux-arm linux-arm64; do
            if [ -d "$rid" ]; then
              # Copy original versioned binary
              cp "$rid"/FeatherCli-* ../release-assets/ 2>/dev/null || true
              # Create a copy with simple name for global installation
              for file in "$rid"/FeatherCli-*; do
                if [ -f "$file" ] && [[ "$file" != *.sha256 ]]; then
                  cp "$file" "../release-assets/feathercli-$rid"
                  chmod +x "../release-assets/feathercli-$rid"
                  echo "Created feathercli-$rid"
                fi
              done
            fi
          done
          cp build-info.txt ../release-assets/ 2>/dev/null || true
          ls -lh ../release-assets/

      - name: Create Release Notes
        id: release_notes
        working-directory: cli
        run: |
          cat > release-assets/RELEASE_NOTES.md <<EOF
          # FeatherCli v${{ steps.version.outputs.version }}

          ## Quick Install (Recommended)

          Download and install globally in one command:

          ### Linux x64 (amd64)
          \`\`\`bash
          curl -L -o /usr/local/bin/feathercli https://github.com/\$GITHUB_REPOSITORY/releases/download/v${{ steps.version.outputs.version }}/feathercli-linux-x64 && chmod +x /usr/local/bin/feathercli
          \`\`\`

          ### Linux ARM64
          \`\`\`bash
          curl -L -o /usr/local/bin/feathercli https://github.com/\$GITHUB_REPOSITORY/releases/download/v${{ steps.version.outputs.version }}/feathercli-linux-arm64 && chmod +x /usr/local/bin/feathercli
          \`\`\`

          ### Linux ARM (ARMv7, 32-bit)
          \`\`\`bash
          curl -L -o /usr/local/bin/feathercli https://github.com/\$GITHUB_REPOSITORY/releases/download/v${{ steps.version.outputs.version }}/feathercli-linux-arm && chmod +x /usr/local/bin/feathercli
          \`\`\`

          After installation, use:
          \`\`\`bash
          feathercli server start <uuid>
          feathercli server stop <uuid>
          feathercli --help
          \`\`\`

          ## Manual Installation

          ### Option 1: Global Installation (Recommended)
          1. Download the appropriate binary for your system (see below)
          2. Make it executable: \`chmod +x feathercli-*\`
          3. Move to your PATH: \`sudo mv feathercli-* /usr/local/bin/feathercli\`
          4. Run from anywhere: \`feathercli server start <uuid>\`

          ### Option 2: Local Installation
          1. Download the appropriate binary for your system (see below)
          2. Make it executable: \`chmod +x feathercli-*\`
          3. Run locally: \`./feathercli-* server start <uuid>\`

          ## Available Downloads

          ### Linux x64 (amd64)
          - **Quick Install**: \`feathercli-linux-x64\` (rename to \`feathercli\`)
          - **Versioned**: \`FeatherCli-linux-x64-v${{ steps.version.outputs.version }}\`
          - **Checksums**: \`.sha256\` files for verification

          ### Linux ARM64
          - **Quick Install**: \`feathercli-linux-arm64\` (rename to \`feathercli\`)
          - **Versioned**: \`FeatherCli-linux-arm64-v${{ steps.version.outputs.version }}\`
          - **Checksums**: \`.sha256\` files for verification

          ### Linux ARM (ARMv7, 32-bit)
          - **Quick Install**: \`feathercli-linux-arm\` (rename to \`feathercli\`)
          - **Versioned**: \`FeatherCli-linux-arm-v${{ steps.version.outputs.version }}\`
          - **Checksums**: \`.sha256\` files for verification

          ## Security - Verify Downloads

          Always verify the download integrity using SHA256 checksums:

          \`\`\`bash
          # For quick install binaries
          sha256sum -c feathercli-linux-x64.sha256

          # For versioned binaries
          sha256sum -c FeatherCli-linux-x64-v${{ steps.version.outputs.version }}.sha256
          \`\`\`

          ## Usage Examples

          \`\`\`bash
          # Start a server
          feathercli server start abc123

          # Stop a server
          feathercli server stop abc123

          # Show help
          feathercli --help

          # Show version
          feathercli --version
          \`\`\`

          ## Features

          - âœ… Self-contained binaries (no dependencies required)
          - âœ… Optimized for size and performance
          - âœ… Built with .NET 9.0
          - âœ… Global installation support
          - âœ… Local execution support

          ---

          **Build Date**: $(date +%Y-%m-%d)  
          **Publisher**: MythicalSystems  
          **Repository**: https://github.com/\$GITHUB_REPOSITORY
          EOF
          cat release-assets/RELEASE_NOTES.md

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          name: FeatherCli v${{ steps.version.outputs.version }}
          body_path: cli/release-assets/RELEASE_NOTES.md
          draft: false
          prerelease: false
          files: |
            cli/release-assets/feathercli-linux-x64*
            cli/release-assets/feathercli-linux-arm-*
            cli/release-assets/feathercli-linux-arm64*
            cli/release-assets/FeatherCli-linux-x64-*
            cli/release-assets/FeatherCli-linux-arm-*
            cli/release-assets/FeatherCli-linux-arm64-*
            cli/release-assets/build-info.txt
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Release Summary
        run: |
          echo "### âœ… CLI Release Published!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Version**: v${{ steps.version.outputs.version }}" >> $GITHUB_STEP_SUMMARY
          echo "**Release URL**: ${{ steps.create_release.outputs.url }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "#### ðŸš€ Quick Install Binaries (Recommended):" >> $GITHUB_STEP_SUMMARY
          echo "- feathercli-linux-x64 (+ SHA256)" >> $GITHUB_STEP_SUMMARY
          echo "- feathercli-linux-arm (+ SHA256)" >> $GITHUB_STEP_SUMMARY
          echo "- feathercli-linux-arm64 (+ SHA256)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "#### ðŸ“¦ Versioned Binaries:" >> $GITHUB_STEP_SUMMARY
          echo "- FeatherCli-linux-x64-v${{ steps.version.outputs.version }} (+ SHA256)" >> $GITHUB_STEP_SUMMARY
          echo "- FeatherCli-linux-arm-v${{ steps.version.outputs.version }} (+ SHA256)" >> $GITHUB_STEP_SUMMARY
          echo "- FeatherCli-linux-arm64-v${{ steps.version.outputs.version }} (+ SHA256)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "#### ðŸ“„ Additional Files:" >> $GITHUB_STEP_SUMMARY
          echo "- build-info.txt" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "#### ðŸ’¡ Quick Install Command:" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`bash" >> $GITHUB_STEP_SUMMARY
          echo "curl -L -o /usr/local/bin/feathercli https://github.com/\${{ github.repository }}/releases/download/v${{ steps.version.outputs.version }}/feathercli-linux-x64 && chmod +x /usr/local/bin/feathercli" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
