---
description: FeatherPanel Frontend - shadcn-vue UI Component Usage
globs: frontend/src/components/**/*.vue, frontend/src/pages/**/*.vue
alwaysApply: false
---

# shadcn-vue UI Components

## Available Components

Located in `src/components/ui/`:

- `Button` - Buttons with variants
- `Card` - Card components
- `Input` - Text inputs
- `Label` - Form labels
- `Badge` - Badges/tags
- `Avatar` - User avatars
- `Drawer` - Side drawer/sheet
- `Dialog` - Modal dialogs
- `Dropdown Menu` - Dropdown menus
- `Select` - Select dropdowns
- `Checkbox` - Checkboxes
- `Switch` - Toggle switches
- `Tabs` - Tab navigation
- `Table` - Basic tables
- `Breadcrumb` - Breadcrumb navigation
- `Sidebar` - Collapsible sidebar
- `Alert` - Alert messages
- `Separator` - Dividers
- `Skeleton` - Loading skeletons
- `Toast` - Toast notifications
- `Tooltip` - Tooltips
- `Popover` - Popovers
- `Pagination` - Pagination controls

## Button Component

```vue
<template>
  <Button variant="default">Default</Button>
  <Button variant="destructive">Delete</Button>
  <Button variant="outline">Outline</Button>
  <Button variant="secondary">Secondary</Button>
  <Button variant="ghost">Ghost</Button>
  <Button variant="link">Link</Button>

  <!-- Sizes -->
  <Button size="default">Default</Button>
  <Button size="sm">Small</Button>
  <Button size="lg">Large</Button>
  <Button size="icon">
    <Plus />
  </Button>

  <!-- With icon -->
  <Button>
    <Plus class="h-4 w-4 mr-2" />
    Create
  </Button>

  <!-- Loading state -->
  <Button :loading="isLoading">Submit</Button>

  <!-- Disabled -->
  <Button :disabled="true">Disabled</Button>
</template>

<script setup lang="ts">
import { Button } from "@/components/ui/button";
import { Plus } from "lucide-vue-next";
</script>
```

## Card Components

```vue
<template>
  <Card>
    <CardHeader>
      <CardTitle>Card Title</CardTitle>
      <CardDescription>Card description text</CardDescription>
    </CardHeader>
    <CardContent>
      <p>Card content goes here</p>
    </CardContent>
    <CardFooter>
      <Button>Action</Button>
    </CardFooter>
  </Card>
</template>

<script setup lang="ts">
import {
  Card,
  CardHeader,
  CardTitle,
  CardDescription,
  CardContent,
  CardFooter,
} from "@/components/ui/card";
import { Button } from "@/components/ui/button";
</script>
```

## Input and Form Components

```vue
<template>
  <div class="grid gap-3">
    <Label for="email">Email</Label>
    <Input id="email" v-model="email" type="email" placeholder="Enter email" />
  </div>

  <div class="grid gap-3">
    <Label for="password">Password</Label>
    <Input id="password" v-model="password" type="password" />
  </div>

  <div class="grid gap-3">
    <Label for="description">Description</Label>
    <Textarea id="description" v-model="description" rows="4" />
  </div>
</template>

<script setup lang="ts">
import { Label } from "@/components/ui/label";
import { Input } from "@/components/ui/input";
import { Textarea } from "@/components/ui/textarea";
</script>
```

## Drawer (Sheet) Component

```vue
<template>
  <Drawer :open="isOpen" @update:open="handleClose">
    <DrawerContent>
      <DrawerHeader>
        <DrawerTitle>Drawer Title</DrawerTitle>
        <DrawerDescription>Drawer description</DrawerDescription>
      </DrawerHeader>

      <div class="p-4">
        <!-- Drawer content -->
      </div>

      <DrawerFooter>
        <Button @click="handleSave">Save</Button>
        <Button variant="outline" @click="handleClose">Cancel</Button>
      </DrawerFooter>
    </DrawerContent>
  </Drawer>
</template>

<script setup lang="ts">
import {
  Drawer,
  DrawerContent,
  DrawerHeader,
  DrawerTitle,
  DrawerDescription,
  DrawerFooter,
} from "@/components/ui/drawer";
import { Button } from "@/components/ui/button";
import { ref } from "vue";

const isOpen = ref(false);

const handleClose = (value: boolean) => {
  isOpen.value = value;
};
</script>
```

## Select Component

```vue
<template>
  <Select v-model="selected">
    <SelectTrigger>
      <SelectValue placeholder="Select an option" />
    </SelectTrigger>
    <SelectContent>
      <SelectItem value="option1">Option 1</SelectItem>
      <SelectItem value="option2">Option 2</SelectItem>
      <SelectItem value="option3">Option 3</SelectItem>
    </SelectContent>
  </Select>
</template>

<script setup lang="ts">
import {
  Select,
  SelectTrigger,
  SelectValue,
  SelectContent,
  SelectItem,
} from "@/components/ui/select";
import { ref } from "vue";

const selected = ref("");
</script>
```

## Badge Component

```vue
<template>
  <Badge>Default</Badge>
  <Badge variant="secondary">Secondary</Badge>
  <Badge variant="destructive">Error</Badge>
  <Badge variant="outline">Outline</Badge>

  <!-- Custom color -->
  <Badge :style="{ backgroundColor: '#ff0000', color: '#fff' }"> Custom </Badge>
</template>

<script setup lang="ts">
import { Badge } from "@/components/ui/badge";
</script>
```

## Avatar Component

```vue
<template>
  <Avatar>
    <AvatarImage :src="user.avatar" :alt="user.username" />
    <AvatarFallback>{{ user.username[0] }}</AvatarFallback>
  </Avatar>
</template>

<script setup lang="ts">
import { Avatar, AvatarImage, AvatarFallback } from "@/components/ui/avatar";
</script>
```

## Using Icons (Lucide)

```vue
<template>
  <Button>
    <Plus class="h-4 w-4 mr-2" />
    Create
  </Button>

  <Eye :size="16" />
  <Pencil :size="18" class="text-blue-600" />
  <Trash2 :size="16" class="text-red-600" />
</template>

<script setup lang="ts">
import { Plus, Eye, Pencil, Trash2 } from "lucide-vue-next";
import { Button } from "@/components/ui/button";
</script>
```
