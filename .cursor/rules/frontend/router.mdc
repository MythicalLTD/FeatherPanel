---
description: FeatherPanel Frontend - Vue Router Configuration and Route Patterns
globs: frontend/src/router/**/*.ts
alwaysApply: false
---

# Vue Router Patterns

## Auto-Discovery System

Routes are automatically discovered from `router/routes/**/*.ts` files.

## Route Definition

```typescript
import type { RouteRecordRaw } from "vue-router";

const adminRoutes: RouteRecordRaw[] = [
  {
    path: "/admin",
    name: "Admin",
    component: () => import("@/pages/admin/Home.vue"),
  },
  {
    path: "/admin/users",
    name: "AdminUsers",
    component: () => import("@/pages/admin/Users.vue"),
  },
  {
    path: "/admin/servers/:id/edit",
    name: "AdminServersEdit",
    component: () => import("@/pages/admin/Servers/Edit.vue"),
  },
];

export default adminRoutes;
```

## Route Naming Convention

- **PascalCase:** `AdminUsers`, `ServerConsole`, `Login`
- **Prefix admin routes:** `Admin` prefix for admin panel
- **Descriptive:** Match component/page name when possible
- **No special characters:** Only letters and numbers

## Lazy Loading (Required)

Always use dynamic imports:

```typescript
// ✅ CORRECT - Lazy loaded
component: () => import("@/pages/admin/Users.vue");

// ❌ WRONG - Eager loaded
import Users from "@/pages/admin/Users.vue";
component: Users;
```

## Nested Routes

```typescript
{
  path: "/auth",
  component: () => import("@/layouts/AuthLayout.vue"),
  children: [
    { path: "login", name: "Login", component: () => import("@/pages/auth/Login.vue") },
    { path: "register", name: "Register", component: () => import("@/pages/auth/Register.vue") },
  ],
}
```

## Route Parameters

```typescript
// Define route with parameter
{
  path: "/admin/servers/:id/edit",
  name: "AdminServersEdit",
  component: () => import("@/pages/admin/Servers/Edit.vue"),
}

// Access in component
import { useRoute } from "vue-router";

const route = useRoute();
const serverId = route.params.id as string;
```

## Navigation

```typescript
import { useRouter } from "vue-router";

const router = useRouter();

// Navigate by name
router.push({ name: "AdminUsers" });

// Navigate with params
router.push({ name: "AdminServersEdit", params: { id: "123" } });

// Navigate with query
router.push({ name: "AdminUsers", query: { page: 2, search: "test" } });

// Navigate by path
router.push("/admin/users");

// Replace (no history)
router.replace({ name: "Login" });

// Go back
router.go(-1);
```

## Route Meta

```typescript
{
  path: "/admin/users",
  name: "AdminUsers",
  component: () => import("@/pages/admin/Users.vue"),
  meta: {
    transition: "fade", // Page transition type
    requiresAuth: true,
    permission: "admin.users.view",
  },
}
```

## Navigation Guards

```typescript
// In router/index.ts or route file
router.beforeEach((to, from, next) => {
  // Check authentication
  if (to.meta.requiresAuth && !isAuthenticated()) {
    next({ name: "Login", query: { redirect: to.fullPath } });
    return;
  }

  next();
});
```
