---
description: FeatherPanel Backend - Project Overview, Architecture & Core Technologies
globs: backend/**/*.php
alwaysApply: false
---

# FeatherPanel Backend - Overview

## Project Context

FeatherPanel Backend is a modern PHP 8.1+ application built without a traditional framework, using Symfony components for routing and HTTP, with PDO for database access.

## Core Technologies

- **PHP:** 8.1+ (requires 8.4 for some features)
- **Database:** MySQL/MariaDB with PDO
- **Cache:** Redis (Predis library)
- **Router:** Symfony Routing Component
- **HTTP:** Symfony HttpFoundation
- **OpenAPI:** zircote/swagger-php
- **Email:** PHPMailer
- **2FA:** Google2FA (pragmarx/google2fa)
- **HTTP Client:** Guzzle
- **JWT:** Firebase PHP-JWT
- **YAML:** Symfony YAML

## Project Structure

```
backend/
├── app/
│   ├── App.php               # Main application class
│   ├── Permissions.php       # Permission constants
│   ├── Cache/               # Cache implementations
│   ├── Chat/                # Database models (Data Access Layer)
│   ├── Cli/                 # CLI commands
│   ├── CloudFlare/          # CloudFlare utilities
│   ├── Config/              # Configuration management
│   ├── Controllers/         # HTTP controllers
│   │   ├── Admin/          # Admin panel controllers
│   │   ├── User/           # User panel controllers
│   │   ├── System/         # System controllers
│   │   └── Wings/          # Wings daemon controllers
│   ├── Cron/               # Cron job interfaces
│   ├── FastChat/           # Redis wrapper
│   ├── Helpers/            # Utility classes
│   ├── Logger/             # Logging system
│   ├── Mail/               # Email templates
│   ├── Middleware/         # HTTP middleware
│   ├── Plugins/            # Plugin system
│   ├── routes/             # Route definitions
│   └── Services/           # External services (Wings, etc.)
├── boot/                    # Bootstrap files
├── public/                  # Public entry point
├── storage/
│   ├── addons/             # Plugin directory
│   ├── caches/             # Cache directory
│   ├── config/             # .env file
│   ├── cron/               # Cron jobs
│   ├── logs/               # Log files
│   ├── migrations/         # Database migrations
│   └── packages/           # Composer packages (vendor)
├── tests/                   # PHPUnit tests
├── composer.json            # Dependencies
├── cli                      # CLI entry point
└── nginx.conf              # Nginx configuration
```

## Autoloading (PSR-4)

```json
{
  "autoload": {
    "psr-4": {
      "App\\": "app/",
      "App\\Addons\\": "storage/addons/",
      "App\\Cron\\": "storage/cron/php/"
    }
  }
}
```

**Namespace Rules:**

- Core app: `App\{Component}`
- Chat models: `App\Chat\{Model}`
- Controllers: `App\Controllers\{Area}\{Controller}`
- Plugins: `App\Addons\{plugin}\{Component}`
- Cron jobs: `App\Cron\{CronJob}`

## Key Dependencies

### Production Dependencies

- `vlucas/phpdotenv` - Environment variable management
- `symfony/routing` - HTTP routing
- `symfony/http-foundation` - HTTP request/response
- `predis/predis` - Redis client
- `guzzlehttp/guzzle` - HTTP client
- `phpmailer/phpmailer` - Email sending
- `pragmarx/google2fa` - Two-factor authentication
- `firebase/php-jwt` - JWT tokens
- `zircote/swagger-php` - OpenAPI documentation
- `nikolaposa/rate-limit` - Rate limiting
- `sentry/sentry` - Error tracking

### Development Dependencies

- `phpunit/phpunit` - Testing framework
- `friendsofphp/php-cs-fixer` - Code formatting

## License Header

**EVERY** PHP file MUST include this MIT license header:

```php
<?php

/*
 * This file is part of FeatherPanel.
 *
 * MIT License
 *
 * Copyright (c) 2025 MythicalSystems
 * Copyright (c) 2025 Cassian Gherman (NaysKutzu)
 * Copyright (c) 2018 - 2021 Dane Everitt <dane@daneeveritt.com> and Contributors
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
```

## Terminology Standards

**ALWAYS use the correct FeatherPanel terminology:**

- ✅ `realms` (NOT "nests")
- ✅ `spells` (NOT "eggs")
- ✅ `realm_id` / `realms_id` in foreign keys
- ✅ `spell_id` in foreign keys
- ✅ Table names: `featherpanel_realms`, `featherpanel_spells`
- ✅ Controllers: `RealmsController`, `SpellsController`
- ✅ Models: `Realm::class`, `Spell::class`

**Never use deprecated terms:**

- ❌ `eggs` → Use `spells`
- ❌ `nests` → Use `realms`
- ❌ `NestsController` → Use `RealmsController`
- ❌ `EggsController` → Use `SpellsController`

## Entry Points

### Web (HTTP)

`public/index.php` - Handles HTTP requests

### CLI

`cli` - Command line interface

```bash
php fuse <command> [args]
```

### Cron

`storage/cron/runner.php` - Runs scheduled tasks

## Application Boot Sequence

1. **Load Environment** - `$this->loadEnv()` loads `.env` file
2. **Initialize Redis** - Connect to Redis for caching/rate limiting
3. **Rate Limiting** - Check request rate limits
4. **Database Connection** - Initialize PDO connection
5. **Plugin System** - Load and initialize plugins
6. **Router** - Register routes and handle request
7. **Middleware** - Run request through middleware stack
8. **Controller** - Execute controller action
9. **Response** - Return HTTP response

## Environment Variables

Located in `storage/config/.env`:

```env
DATABASE_HOST=127.0.0.1
DATABASE_PORT=3306
DATABASE_USER=featherpanel
DATABASE_PASSWORD=password
DATABASE_DATABASE=featherpanel
DATABASE_ENCRYPTION=xchacha20
DATABASE_ENCRYPTION_KEY=generated-key

REDIS_PASSWORD=password
REDIS_HOST=127.0.0.1
REDIS_PORT=6379

APP_NAME=FeatherPanel
APP_URL=https://panel.example.com
APP_TIMEZONE=UTC

SMTP_ENABLED=false
SMTP_HOST=smtp.example.com
SMTP_PORT=587
SMTP_USER=user
SMTP_PASS=password
SMTP_ENCRYPTION=tls
SMTP_FROM=noreply@example.com
```

## Development Commands

```bash
# Run linter/code formatter
composer lint

# Run tests
composer tests

# Generate OpenAPI documentation
composer openapi

# Run CLI commands
php fuse help
php fuse users list
php fuse migrate

# Run development server
php -S localhost:8721 -t public/
```
